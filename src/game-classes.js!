/* eslint-env browser */
import { Actor, SetOfActors } from './actors-and-roles';
import imgIPAEmpty from './img/mugs/IPA/IPA_mug_empty.png';
import { importAll, setImg } from './helperslib';

const BEER_IPA = '@@beer/IPA';
export const beerTypes = { BEER_IPA };

export const mugTypes = {
  [BEER_IPA]: {
    width: 50,
    empty: imgIPAEmpty,
    fillingStates: importAll(
      require.context('../src/img/mugs/IPA/IPA_filling_states', false, /\.png$/),
    ),
    overfilledStates: importAll(
      require.context('../src/img/mugs/IPA/IPA_overfilled_states', false, /\.png$/),
    ),
  },
};

const mugLineBase = 300;

export class Stage extends SetOfActors {
  constructor(node, stageDimension) {
    super(() => [new Actor(node, stageDimension)]);
    this.node = node;
    Object.assign(this, stageDimension);
  }

  get scaleF() {
    return [...this.roleSet][0].scaleF;
  }
}

export class Mug extends Actor {
  constructor(stage, type, horizontalPosition) {
    const { width } = mugTypes[type];
    super(
      document.createElement('div'),
      { x: horizontalPosition, y: mugLineBase, width },
      stage.scaleF,
    );
    setImg(this, mugTypes[type].empty, { width: '100%', bottom: '0px' });
    this.type = type;
    this.load = {};
    stage.node.appendChild(this.node);
  }

  get position() {
    return { x: this.left + this.width / 2, y: this.bottom };
  }

  setPosition(position) {
    const { x, y, width } = position;
    Actor.prototype.setPosition.call(this, {
      left: x - (width || this.width) / 2,
      bottom: y,
      width,
    });
  }
}
